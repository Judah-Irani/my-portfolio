{"ast":null,"code":"'use strict';\n\nvar jsonSafeStringify = require('json-stringify-safe');\nvar crypto = require('crypto');\nvar Buffer = require('safe-buffer').Buffer;\nvar defer = typeof setImmediate === 'undefined' ? process.nextTick : setImmediate;\nfunction paramsHaveRequestBody(params) {\n  return params.body || params.requestBodyStream || params.json && typeof params.json !== 'boolean' || params.multipart;\n}\nfunction safeStringify(obj, replacer) {\n  var ret;\n  try {\n    ret = JSON.stringify(obj, replacer);\n  } catch (e) {\n    ret = jsonSafeStringify(obj, replacer);\n  }\n  return ret;\n}\nfunction md5(str) {\n  return crypto.createHash('md5').update(str).digest('hex');\n}\nfunction isReadStream(rs) {\n  return rs.readable && rs.path && rs.mode;\n}\nfunction toBase64(str) {\n  return Buffer.from(str || '', 'utf8').toString('base64');\n}\nfunction copy(obj) {\n  var o = {};\n  Object.keys(obj).forEach(function (i) {\n    o[i] = obj[i];\n  });\n  return o;\n}\nfunction version() {\n  var numbers = process.version.replace('v', '').split('.');\n  return {\n    major: parseInt(numbers[0], 10),\n    minor: parseInt(numbers[1], 10),\n    patch: parseInt(numbers[2], 10)\n  };\n}\nexports.paramsHaveRequestBody = paramsHaveRequestBody;\nexports.safeStringify = safeStringify;\nexports.md5 = md5;\nexports.isReadStream = isReadStream;\nexports.toBase64 = toBase64;\nexports.copy = copy;\nexports.version = version;\nexports.defer = defer;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}