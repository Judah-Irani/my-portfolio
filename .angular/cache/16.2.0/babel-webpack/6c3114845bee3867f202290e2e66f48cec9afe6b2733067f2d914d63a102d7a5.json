{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { startWith, delay, filter, takeWhile } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { trigger } from '@angular/animations';\nimport { beat, bounce, headShake, heartBeat, pulse, rubberBand, shake, swing, wobble, jello, tada, flip } from './attention-seekers';\nimport { bumpIn, bounceIn, fadeIn, flipIn, jackInTheBox, landing, rollIn, zoomIn } from './entrances';\nimport { bounceOut, fadeOut, hinge, rollOut, zoomOut } from './exits';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./animate.service\";\nconst _c0 = [\"wmAnimate\", \"\"];\nconst _c1 = [\"*\"];\nlet AnimateComponent = /*#__PURE__*/(() => {\n  var _class;\n  class AnimateComponent {\n    constructor(elm, scroll) {\n      this.elm = elm;\n      this.scroll = scroll;\n      this.replay$ = new Subject();\n      this.animating = false;\n      this.animated = false;\n      this.disabled = false;\n      this.start = new EventEmitter();\n      this.done = new EventEmitter();\n      this.paused = false;\n      this.threshold = 0;\n      this.once = false;\n    }\n    get idle() {\n      return {\n        value: `idle-${this.animate}`\n      };\n    }\n    get play() {\n      const params = {};\n      if (!!this.timing) {\n        params['timing'] = this.timing;\n      }\n      if (!!this.delay) {\n        params['delay'] = this.delay;\n      }\n      return {\n        value: this.animate,\n        params\n      };\n    }\n    set speed(speed) {\n      this.timing = {\n        slower: '3s',\n        slow: '2s',\n        normal: '1s',\n        fast: '500ms',\n        faster: '300ms'\n      }[speed || 'normal'];\n    }\n    set postpone(delay) {\n      const value = coerceNumberProperty(delay, 0);\n      if (value) {\n        this.delay = `${value}ms`;\n      } else {\n        this.delay = /^\\d+(?:ms|s)$/.test(delay) ? delay : '';\n      }\n    }\n    set disableAnimation(value) {\n      this.disabled = coerceBooleanProperty(value);\n    }\n    animationStart() {\n      this.animating = true;\n      this.animated = false;\n      this.start.emit();\n    }\n    animationDone() {\n      this.animating = false;\n      this.animated = true;\n      this.done.emit();\n    }\n    set pauseAnimation(value) {\n      this.paused = coerceBooleanProperty(value);\n    }\n    set enableAOS(value) {\n      this.threshold = coerceNumberProperty(value, 0.5);\n    }\n    set aosOnce(value) {\n      this.once = coerceBooleanProperty(value);\n    }\n    set replay(replay) {\n      if (!!this.trigger && coerceBooleanProperty(replay)) {\n        this.trigger = this.idle;\n        this.replay$.next(true);\n      }\n    }\n    ngOnInit() {\n      this.trigger = this.idle;\n      this.sub = this.replay$.pipe(delay(0), startWith(!this.paused), this.scroll.trigger(this.elm, this.threshold), filter(trigger => !this.animating), takeWhile(trigger => !trigger || !this.once, true)).subscribe(trigger => {\n        this.trigger = trigger ? this.play : this.idle;\n      });\n    }\n    ngOnDestroy() {\n      this.sub.unsubscribe();\n    }\n  }\n  _class = AnimateComponent;\n  _class.ɵfac = function AnimateComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.AnimateService));\n  };\n  _class.ɵcmp = i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"\", \"wmAnimate\", \"\"]],\n    hostVars: 2,\n    hostBindings: function AnimateComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵsyntheticHostListener(\"@animate.start\", function AnimateComponent_animation_animate_start_HostBindingHandler() {\n          return ctx.animationStart();\n        })(\"@animate.done\", function AnimateComponent_animation_animate_done_HostBindingHandler() {\n          return ctx.animationDone();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵsyntheticHostProperty(\"@animate\", ctx.trigger)(\"@.disabled\", ctx.disabled);\n      }\n    },\n    inputs: {\n      animate: [\"wmAnimate\", \"animate\"],\n      speed: \"speed\",\n      postpone: [\"delay\", \"postpone\"],\n      disableAnimation: [\"disabled\", \"disableAnimation\"],\n      pauseAnimation: [\"paused\", \"pauseAnimation\"],\n      enableAOS: [\"aos\", \"enableAOS\"],\n      aosOnce: [\"once\", \"aosOnce\"],\n      replay: \"replay\"\n    },\n    outputs: {\n      start: \"start\",\n      done: \"done\"\n    },\n    attrs: _c0,\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    template: function AnimateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    data: {\n      animation: [trigger('animate', [...beat, ...bounce, ...flip, ...headShake, ...heartBeat, ...jello, ...pulse, ...rubberBand, ...shake, ...swing, ...tada, ...wobble, ...bumpIn, ...bounceIn, ...fadeIn, ...flipIn, ...jackInTheBox, ...landing, ...rollIn, ...zoomIn, ...bounceOut, ...fadeOut, ...hinge, ...rollOut, ...zoomOut])]\n    }\n  });\n  return AnimateComponent;\n})();\nexport { AnimateComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}