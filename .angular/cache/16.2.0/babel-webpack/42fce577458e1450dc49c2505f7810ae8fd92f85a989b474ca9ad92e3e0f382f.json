{"ast":null,"code":"'use strict';\n\nconst services = require('./services.json');\nconst normalized = {};\nObject.keys(services).forEach(key => {\n  let service = services[key];\n  normalized[normalizeKey(key)] = normalizeService(service);\n  [].concat(service.aliases || []).forEach(alias => {\n    normalized[normalizeKey(alias)] = normalizeService(service);\n  });\n  [].concat(service.domains || []).forEach(domain => {\n    normalized[normalizeKey(domain)] = normalizeService(service);\n  });\n});\nfunction normalizeKey(key) {\n  return key.replace(/[^a-zA-Z0-9.-]/g, '').toLowerCase();\n}\nfunction normalizeService(service) {\n  let filter = ['domains', 'aliases'];\n  let response = {};\n  Object.keys(service).forEach(key => {\n    if (filter.indexOf(key) < 0) {\n      response[key] = service[key];\n    }\n  });\n  return response;\n}\n\n/**\n * Resolves SMTP config for given key. Key can be a name (like 'Gmail'), alias (like 'Google Mail') or\n * an email address (like 'test@googlemail.com').\n *\n * @param {String} key [description]\n * @returns {Object} SMTP config or false if not found\n */\nmodule.exports = function (key) {\n  key = normalizeKey(key.split('@').pop());\n  return normalized[key] || false;\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}