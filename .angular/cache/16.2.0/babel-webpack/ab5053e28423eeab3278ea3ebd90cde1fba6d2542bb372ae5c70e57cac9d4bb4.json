{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule } from '@angular/core';\nimport { ApolloModule, APOLLO_OPTIONS } from 'apollo-angular';\nimport { HttpLinkModule, HttpLink } from 'apollo-angular-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { setContext } from 'apollo-link-context';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpClientModule } from '@angular/common/http';\nconst uri = 'https://api.github.com/graphql';\nexport function provideApollo(httpLink) {\n  const basic = setContext((operation, context) => ({\n    headers: {\n      Accept: 'charset=utf-8'\n    }\n  }));\n  const token = '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';\n  const auth = setContext((operation, context) => ({\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }));\n  const link = ApolloLink.from([basic, auth, httpLink.create({\n    uri\n  })]);\n  const cache = new InMemoryCache();\n  return {\n    link,\n    cache\n  };\n}\nlet GraphQLModule = class GraphQLModule {};\nGraphQLModule = __decorate([NgModule({\n  exports: [ApolloModule, HttpLinkModule, HttpClientModule],\n  providers: [{\n    provide: APOLLO_OPTIONS,\n    useFactory: provideApollo,\n    deps: [HttpLink]\n  }]\n})], GraphQLModule);\nexport { GraphQLModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}